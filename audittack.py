import sys
import os
from utils.attck_client import get_attack_data
from utils.audit_generator import generate_audit_items, load_control_templates
from utils.writer import write_to_excel
from utils.attck_client import get_attack_data, get_local_attack_version

def print_banner():
    banner = r"""
   ‚ñë‚ñà‚ñà‚ñà                      ‚ñë‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà     ‚ñë‚ñà‚ñà 
  ‚ñë‚ñà‚ñà‚ñë‚ñà‚ñà                     ‚ñë‚ñà‚ñà        ‚ñë‚ñà‚ñà        ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà   ‚ñë‚ñà‚ñà   ‚ñë‚ñà‚ñà   ‚ñë‚ñà‚ñà ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà  
 ‚ñë‚ñà‚ñà  ‚ñë‚ñà‚ñà  ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà        ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà        ‚ñë‚ñà‚ñà        ‚ñë‚ñà‚ñà   ‚ñë‚ñà‚ñà   
‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà        ‚ñë‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñà‚ñà        ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    
‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà        ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà   ‚ñë‚ñà‚ñà  ‚ñë‚ñà‚ñà        ‚ñë‚ñà‚ñà   ‚ñë‚ñà‚ñà   
‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà ‚ñë‚ñà‚ñà   ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà   ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà        ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà   ‚ñë‚ñà‚ñà   ‚ñë‚ñà‚ñà   ‚ñë‚ñà‚ñà ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà  
‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñà‚ñà ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà        ‚ñë‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà     ‚ñë‚ñà‚ñà  

          üîê Threat-Intelligence Based Audit Checklist Generator
               üë§ Author: adeftriangga      üõ†Ô∏è Version: 1.0
    """
    print(banner)

def get_user_input():
    print("Select ATT&CK Domain:")
    print("1. Enterprise")
    print("2. Mobile")
    print("3. Ics")
    choice = input("Enter choice [1-3]: ").strip()

    domain_map = {"1": "enterprise", "2": "mobile", "3": "ics"}
    domain = domain_map.get(choice)
    if not domain:
        print("‚ùå Invalid choice. Exiting.")
        sys.exit(1)

    # Get local STIX bundle version
    version, modified = get_local_attack_version(domain)
    print(f"\nüì¶ Local ATT&CK version: {version} | Last modified: {modified}")

    update_input = input("üîÅ Do you want to update the MITRE ATT&CK data? (y/n): ").strip().lower()
    update_flag = update_input == 'y'

    groups = input("üéØ Enter threat actor group(s), comma-separated (e.g. APT29, FIN7): ").strip()
    filename = input("üìÑ Enter output filename (without .xlsx): ").strip()
    output_file = os.path.join("output", f"{filename}.xlsx")

    return domain, groups, output_file, update_flag

def main():
    print_banner()

    domain, groups, output_file, update_flag = get_user_input()

    print("\nüîç Loading ATT&CK data...")
    techniques, relationships, mitigations, group_objs = get_attack_data(domain, update=update_flag)

    print("‚úÖ Parsing STIX objects...")
    templates = load_control_templates()
    audit_items = generate_audit_items(techniques, relationships, mitigations, group_objs, groups, templates)

    if not audit_items:
        print("‚ö†Ô∏è  No audit items generated. The selected group may not be associated with techniques in the chosen domain.")
        sys.exit(0)

    if not os.path.exists("output"):
        os.makedirs("output")

    write_to_excel(audit_items, output_file)

if __name__ == "__main__":
    main()